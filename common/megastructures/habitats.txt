# see README.txt for example

habitat_0 = {
	entity = ""
	construction_entity = "habitat_phase_01_entity"
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = yes
	entity_offset = { x = -7 y = -7 }
	build_time = 1800

	resources = {
		category = megastructures_habitat
		cost = {
			alloys = 1500
			influence = 150
		}
	}
	construction_blocks_others = no
	construction_blocked_by_others = no

	potential = {
		OR = {
			has_technology = tech_habitat_1
			has_civic = civic_diadochi
			has_civic = civic_great_khans_legacy
			has_country_flag = democratic_khanate_flag
		}
	}

	possible = {
		exists = starbase
		custom_tooltip = {
			fail_text = "requires_inside_border"
			is_inside_border = from
		}
	}

	placement_rules = {
		planet_possible = {
			custom_tooltip = {
				fail_text = "requires_surveyed_planet"
				is_surveyed = {			# prevent leaking habitability information
					who = prev.from
					status = yes
				}
			}
			custom_tooltip = {
				fail_text = "requires_no_anomaly"
				NOT = { has_anomaly = yes }
			}
			custom_tooltip = {
				fail_text = "requires_no_existing_megastructure"
				#can_build_megastructure_on_planet = yes
				NOR = {
					has_planet_flag = megastructure
					has_planet_flag = has_megastructure
					solar_system = {
						has_star_flag = ring_world_built
					}
					is_planet_class = pc_ringworld_habitable
					is_planet_class = pc_ringworld_habitable_damaged
					is_planet_class = pc_ringworld_tech
					is_planet_class = pc_ringworld_tech_damaged
					is_planet_class = pc_ringworld_seam
					is_planet_class = pc_ringworld_seam_damaged
					is_planet_class = pc_habitat
				}
			}

 			# balance for habitats
			custom_tooltip = {
				fail_text = "requires_not_minor_planetary_body"
				OR = {
					prev.from = { is_ai = no }
					has_deposit = yes
					NOR = {
						is_asteroid = yes
						is_moon = yes
					}
				}
			}
			custom_tooltip = {
				fail_text = "requires_not_star"
				is_star = no
			}
		} # use these for all non-star megastructures
	}

	# root = system
	# from = country
	ai_weight = {
		factor = 5

		modifier = {
			factor = 0
			starbase = { NOT = { has_starbase_size >= starbase_starport } }
		}

		modifier = {
			factor = 0
			any_system_planet = {
				is_planet_class = pc_habitat
				is_colony = no
			}
		}

		modifier = {
			factor = 3
			solar_system = {
				exists = owner
				is_same_value = owner.capital_scope.solar_system
			}
		}
		modifier = {
			factor = 2
			any_neighbor_system = {
				exists = owner
				is_same_value = owner.capital_scope.solar_system
			}
		}

		modifier = {
			factor = 0.1
			any_neighbor_system = {
				exists = owner
				owner = { NOT = { is_same_value = from } }
			}
		}
	}

	on_build_start = {}
	on_build_cancel = {}

	on_build_complete = {
		if = {
			limit = {
				fromfrom.planet = {
					OR = {
						is_moon = yes
						is_asteroid = yes
					}
				}
			}
			spawn_planet = {
				class = "pc_habitat"
				location = fromfrom.planet
				orbit_location = yes
				orbit_angle_offset = 45
				orbit_distance_offset = 4.899
				size = 4
				has_ring = no

				init_effect = {
					set_name = "HABITAT_PLANET_NAME"
					set_planet_entity = {
						entity = "habitat_phase_01_entity"
						graphical_culture = fromfrom
					}
					set_surveyed = {
						surveyed = yes
						surveyor = FROM
					}
					set_all_comms_surveyed = yes
					clear_blockers = yes

					set_planet_flag = megastructure
					set_planet_flag = habitat

					spawn_habitat_resources_effect = yes
				}
			}
		}
		else = {
			spawn_planet = {
				class = "pc_habitat"
				location = fromfrom.planet
				orbit_location = yes
				orbit_angle_offset = 45
				orbit_distance_offset = 9.899
				size = 4
				has_ring = no

				init_effect = {
					set_name = "HABITAT_PLANET_NAME"
					set_planet_entity = {
						entity = "habitat_phase_01_entity"
						graphical_culture = fromfrom
					}
					set_surveyed = {
						surveyed = yes
						surveyor = FROM
					}
					set_all_comms_surveyed = yes
					clear_blockers = yes

					set_planet_flag = megastructure
					set_planet_flag = habitat

					spawn_habitat_resources_effect = yes
				}
			}
		}
		fromfrom.planet = {
			set_planet_flag = has_megastructure
			save_event_target_as = habitat_planet

			if = {
				limit = { has_orbital_station = yes }
				orbital_station = {
					dismantle = yes
				}
			}
		}
		remove_megastructure = fromfrom
		from = { country_event =  { id = utopia.61 } }
	}
}